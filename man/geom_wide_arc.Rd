% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_wide_arc.R
\name{geom_wide_arc}
\alias{geom_wide_arc}
\title{A 'ggplot2' geom to draw arcs between genomic alignments.}
\usage{
geom_wide_arc(
  mapping = NULL,
  data = NULL,
  geom = "polygon",
  stat = "wide_arc",
  position = "identity",
  n = 100,
  max.width = NULL,
  y.offset = 0,
  y.reverse = FALSE,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping, data, stat, position, na.rm, show.legend, inherit.aes, ...}{As is standard for ggplot2.}

\item{geom}{The geometric object to use to display the data for this layer.
When using a \verb{stat_*()} function to construct a layer, the \code{geom} argument
can be used to override the default coupling between stats and geoms. The
\code{geom} argument accepts the following:
\itemize{
\item A \code{Geom} ggproto subclass, for example \code{GeomPoint}.
\item A string naming the geom. To give the geom as a string, strip the
function name of the \code{geom_} prefix. For example, to use \code{geom_point()},
give the geom as \code{"point"}.
\item For more information and other ways to specify the geom, see the
\link[ggplot2:layer_geoms]{layer geom} documentation.
}}

\item{n}{The number of points to create for each alignment polygon (Default : `100`).}

\item{max.width}{The maximum width of the arc in y-coordinate units.}

\item{y.offset}{The y-axis coordinate from where the arc will start.}

\item{y.reverse}{Set to `TRUE` if the arc orientation should be flipped upside down.}
}
\value{
Plotting coordinates
}
\description{
`geom_wide_arc()` draws wide polygons between two sets of start and end coordinates.
}
\details{
This geom is intended to draws wide arc polygons between self-alignments defined in PAF format.
Such alignments can be directly visualized using a wrapper function \code{\link{plotSelf}}.
Input data is a \code{data.frame} object that contains required aesthetics `x` and `y` coordinates as well as
`group` field that is required in order to determine which coordinates represent a single alignment.
}
\section{Aesthetics}{

`geom_wide_arc()` require or can take the following aesthetics
(required aesthetics are in bold):

- **x**
- **group**
- y (if not defined it will set to zero)
- color
- linewidth
- linetype
- alpha
- fill
- size
}

\examples{
## Create example data.frame to plot ##
## Each link between sequence region1 (seq1) and sequence region2 (seq2)
## is expected to have 4 x-coordinates (start.seq1, start.seq2, end.seq1, end.seq2)
plt.df <- data.frame(
    x = c(100, 500, 200, 1000),
    group = 1
)
## Make a plot
ggplot2::ggplot(plt.df) +
    geom_wide_arc(ggplot2::aes(x = x, group = group), alpha = 0.5)

}
\seealso{
[plotSelf()]
}
\author{
David Porubsky
}
